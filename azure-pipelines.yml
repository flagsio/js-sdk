trigger:
- main
- feature/*

pool:
  vmImage: ubuntu-latest

stages:
  - stage: Build
    jobs:
      - job: Build
        steps:

          - task: NodeTool@0
            inputs:
              versionSpec: '16.x'
            displayName: 'Install Node.js'

          - script: |
              npm install
            displayName: 'npm install'

          - script: |
              npm run build
            displayName: 'npm build'
                          
          - script: |
              npm run test
            displayName: 'npm test'

          - task: CopyFiles@2
            displayName: 'copy bundles'
            inputs:
              contents: 'dist/**'
              targetFolder: '$(Build.ArtifactStagingDirectory)'

          - publish: '$(Build.ArtifactStagingDirectory)/dist'
            displayName: 'publish artifact'
            artifact: bundles

  - stage: Publish
    dependsOn: Build
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
    variables:
      - group: js-sdk-prd
    jobs:
      - deployment: Production
        displayName: "Publish Package"
        environment: Production
        strategy:
          runOnce: #rolling, canary are the other strategies that are supported
            deploy:
              steps:

                - download: current
                  artifact: bundles

                - script: |
                    ls
                  displayName: 'package content'
                  workingDirectory: '$(Pipeline.Workspace)/bundles'

                - task: NodeTool@0
                  inputs:
                    versionSpec: '16.x'
                  displayName: 'Install Node.js'

                - task: Npm@1
                  displayName: 'publish npm package'
                  inputs:
                    command: publish
                    publishRegistry: useExternalRegistry
                    publishEndpoint: "flagsio-cicd"
                    workingDir: '$(Pipeline.Workspace)/bundles'
